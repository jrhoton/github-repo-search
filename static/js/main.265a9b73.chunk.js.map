{"version":3,"sources":["store/repoSlice.js","components/views/RepositoryItem/RepositoryItem.js","components/views/RepositoriesList/RepositoriesList.js","components/views/Search/Search.js","components/containers/Search/Search.js","components/containers/Details/Details.js","components/App.js","store/configureStore.js","index.js"],"names":["fetchRepos","createAsyncThunk","queryString","a","axios","get","params","q","repoSlice","createSlice","name","initialState","items","selected","loading","reducers","selectRepo","state","action","find","repo","id","payload","extraReducers","pending","fulfilled","data","rejected","actions","RepositoryItem","props","className","to","onClick","language","stargazers_count","RepositoriesList","list","results","map","viewDetail","Search","onKeyDown","e","key","search","FormControl","InputLabel","Input","value","queryParams","keyword","onChange","updateCriteria","target","required","style","minWidth","Select","sort","MenuItem","Button","color","variant","disabled","allowSearch","CircularProgress","length","useSelector","useState","setQueryParams","setAllowSearch","dispatch","useDispatch","criteria","preventDefault","query","Object","entries","forEach","concat","Details","href","owner","html_url","src","avatar_url","alt","full_name","description","App","path","component","configureStore","reducer","repoReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.265a9b73.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialRepoState = {\r\n    items: [],\r\n    selected: null,\r\n    loading: false,\r\n};\r\n\r\nexport const fetchRepos = createAsyncThunk(\r\n    'repo/fetchRepos',\r\n    async (queryString) => {\r\n        return await axios.get('https://api.github.com/search/repositories', {\r\n            params: {q: queryString}\r\n        });\r\n    }\r\n);\r\n\r\nexport const repoSlice = createSlice({\r\n    name: 'repositories',\r\n    initialState: initialRepoState,\r\n    reducers: {\r\n        selectRepo(state, action) {\r\n            state.selected = state.items.find(repo => repo.id === action.payload);\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [fetchRepos.pending]: (state) => {\r\n            state.loading = true;\r\n            // state.error = null;\r\n        },\r\n        [fetchRepos.fulfilled]: (state, action) => {\r\n            state.items = [...action.payload.data.items];\r\n            state.loading = false;\r\n            // state.error = null;\r\n        },\r\n        [fetchRepos.rejected]: (state, action) => {\r\n            state.items = [];\r\n            state.loading = false;\r\n            // state.error = action.payload.error;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { selectRepo } = repoSlice.actions;\r\n\r\nexport default repoSlice.reducer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './RepositoryItem.css';\r\n\r\nconst RepositoryItem = (props) => {\r\n    return (\r\n        <Link\r\n            className='row'\r\n            to=\"/details\"\r\n            onClick={() => props.onClick(props.repo.id)}>\r\n            <div className='nameColumn'>{props.repo.name}</div>\r\n            <div className='column'>{props.repo.language}</div>\r\n            <div className='column alignRight'>{props.repo.stargazers_count}</div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default RepositoryItem;","import React from 'react';\r\nimport RepositoryItem from '../RepositoryItem/RepositoryItem';\r\nimport './RepositoriesList.css';\r\n\r\nconst RepositoriesList = (props) => {\r\n    let list = null\r\n    if (props.results) {\r\n        list = props.results.map(repo => <RepositoryItem key={repo.id} repo={repo} onClick={() => props.viewDetail(repo.id)} />);\r\n    }\r\n\r\n    return(\r\n        <div className='resultsContainer'>\r\n            <div className='columnHeadings'>\r\n                <div className='nameColumn'>Repository Name</div>\r\n                <div className='column'>Language</div>\r\n                <div className='column alignRight'>Stars</div>\r\n            </div>\r\n            {list}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RepositoriesList;","import React from 'react';\r\nimport { FormControl, InputLabel, Input, Select, MenuItem, Button, CircularProgress} from '@material-ui/core';\r\n// import { makeStyles } form '@material-ui/core/styles';\r\nimport RepositoriesList from '../RepositoriesList/RepositoriesList';\r\n\r\nimport './Search.css';\r\n\r\n\r\nconst Search = (props) => {\r\n    return (\r\n        <div>\r\n            <div \r\n                className='searchContainer'\r\n                onKeyDown={e => {if (e.key === 'Enter') {props.search(e)}}}>\r\n                <FormControl className='grow control'>\r\n                    <InputLabel>Search Repositories</InputLabel>\r\n                    <Input\r\n                        name='keyword'\r\n                        value={props.queryParams.keyword || ''}\r\n                        onChange={e => props.updateCriteria('keyword', e.target.value)}\r\n                        required />\r\n                </FormControl>\r\n                <FormControl className='control'>\r\n                    <InputLabel>Language</InputLabel>\r\n                    <Input\r\n                        name='language'\r\n                        value={props.queryParams.language || ''}\r\n                        onChange={e => props.updateCriteria('language', e.target.value)} />\r\n                </FormControl>\r\n                <FormControl style={{minWidth: 120, }}>\r\n                    <InputLabel>Sort By</InputLabel>\r\n                    <Select\r\n                        name='sort' \r\n                        value={props.queryParams.sort || ''}\r\n                        onChange={e => props.updateCriteria('sort', e.target.value)}>\r\n                        <MenuItem value=''>Best Match</MenuItem>\r\n                        <MenuItem value='stars'>Stars</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <div className='control'>\r\n                    <Button\r\n                        // className='control'\r\n                        color='primary'\r\n                        variant='contained'\r\n                        onClick={e => props.search(e)}\r\n                        disabled={!props.allowSearch}>\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            {props.loading ? \r\n                <CircularProgress color='primary' /> :\r\n                null}\r\n            {props.results.length > 0 ? \r\n                <RepositoriesList\r\n                    results={props.results}\r\n                    viewDetail={props.viewDetail} /> :\r\n                null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchRepos, selectRepo } from '../../../store/repoSlice';\r\nimport { default as SearchView } from '../../views/Search/Search';\r\n\r\nconst Search = () => {\r\n    const results = useSelector(state => state.repo.items);\r\n    const loading = useSelector(state => state.repo.loading);\r\n\r\n    const [queryParams, setQueryParams] = useState({});\r\n    const [allowSearch, setAllowSearch] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const updateCriteria = (key, value) => {\r\n        const criteria = {...queryParams, [key]: value};\r\n        criteria ? setAllowSearch(true) : setAllowSearch(false);\r\n        setQueryParams(criteria);\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        let query = '';\r\n        Object.entries(queryParams).forEach(([key, value]) => {\r\n            if (value) {\r\n                if (query) {query = query.concat(' ')}\r\n                if (key === 'keyword') {\r\n                    query = query.concat(value);\r\n                } else {\r\n                    query = query.concat(key, ':\"', value, '\"');\r\n                }\r\n            }\r\n        });\r\n        dispatch(fetchRepos(query));\r\n    }\r\n\r\n    const selectRepository = (id) => {\r\n        dispatch(selectRepo(id));\r\n    };\r\n    \r\n    return (\r\n        <SearchView \r\n            queryParams={queryParams}\r\n            updateCriteria={updateCriteria}\r\n            allowSearch={allowSearch}\r\n            search={handleSearch}\r\n            loading={loading}\r\n            results={results}\r\n            viewDetail={selectRepository} />\r\n    );  \r\n};\r\n\r\nexport default Search;","import React, { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Details.css';\r\n\r\nconst Details = () => {\r\n    const repo = useSelector(state => state.repo.selected);\r\n\r\n    return (\r\n        <Fragment>\r\n            {!repo ? <Redirect to='/' /> :\r\n                <div className='detailsContainer'>\r\n                    <a href={repo.owner.html_url}>\r\n                        <div className='header'>\r\n                            <img \r\n                                className='avatar'\r\n                                src={repo.owner.avatar_url} \r\n                                alt='avatar' />\r\n                            <h2 className='name'>{repo.full_name}</h2>\r\n                        </div>\r\n                    </a>\r\n                    <p className='desc'>{repo.description}</p>\r\n                    <div className='condensed'>\r\n                        <p>{`Language: ${repo.language}`}</p> \r\n                        <p>{`Stars: ${repo.stargazers_count}`}</p>\r\n                    </div>\r\n                    <div className='condensed'>\r\n                        <Link to='/'>{`<< Back`}</Link>\r\n                        <a href={repo.html_url} className='floatRight'>{`View Repository >>`}</a>\r\n                    </div>\r\n                </div>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Details;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Search from './containers/Search/Search';\nimport Details from './containers/Details/Details';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <Switch>\n          <Route path='/details' component={Details} />\n          <Route path='/' component={Search} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport repoReducer from './repoSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        repo: repoReducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from '../src/store/configureStore';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}